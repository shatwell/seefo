% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meanlight.R
\name{meanlight}
\alias{meanlight}
\title{Calculate mean underwater light in a water layer or column}
\usage{
meanlight(I0, kd, bot, areafun = NULL, lev = NULL, top = 0, len = 101)
}
\arguments{
\item{I0}{A numeric vector containing light values just beneath the water surface (ie after accounting for backscatter and reflection).}

\item{kd}{The light extinction coefficient in inverse units of depth (ie 1/m). Can be a single value, which is used for all \code{I0}, or otherwise must have the same length as \code{I0}.}

\item{bot}{The depth of the bottom of the water layer. Typically the mixed layer depth or lake depth for whole lake averages. Can be a single value, which is used for all \code{I0}, or otherwise must have the same length as \code{I0}.}

\item{areafun}{A function that takes elevation (+ve upwards, e.g. m a.s.l. or height above a reference datum like deepest point) as input and returns the lake area at that elevation, typically from \code{approxfun()}. If \code{NULL}, the function calculates the integral mean light without considering bathymetry. If \code{areafun} is given, the mean light is the volume-weighted mean in the layer.}

\item{lev}{The elevation of the water level (+ve upwards) relative to the same reference datum as \code{areafun}. Can be a single value which is used for all \code{I0}, or otherwise must have the same length as \code{I0}.}

\item{top}{The depth of the top of the water layer for averaging. Defaults to \code{0}, or the water surface. Can be a single value, which applies to all \code{I0}, or otherwise must have the same length as \code{I0}.}

\item{len}{The number of internal sublayers to use. Affects precision and is only used when \code{areafun} is given.}
}
\value{
A \code{vector} containing the vertical mean light values corresponding to \code{I0}.
Returns \code{NA} if part of the water column is outside the depth / elevation range defined by \code{areafun}.
}
\description{
Calculate mean underwater light in a water column according to the Lambert-Beer law,
given light at the surface, the extinction coefficient,
and the depth of the layer to calculate the mean for.
}
\details{
This function calculates the mean light in a water layer.
If you specify \code{areafun} and \code{lev}, the function numerically calculates a volume weighted mean,
taking the bathymetry into account, as
\code{Imean = integral(I * A * dz) / (integral(A * dz))}, where \code{I} is irradiance, \code{A} is area and \code{z} is depth.
If you don't specify \code{areafun}, the function returns the analytical integral of the mean light as
\code{Imean = I0 / (kd * bot) * (1 - exp(-kd * bot))}.
Typically you want to calculate the light in the surface mixed layer, in which case the \code{top} of the layer is zero and the \code{bot}tom of the layer is the mixed layer or thermocline depth.
You can also calculate mean light in a subsurface layer (e.g. DCM) by specifying \code{top} and \code{bot}.
The units of the mean light are the same as \code{I0}. The function is intended to calculate mean light for a time series of \code{I0}
values. You can supply single values for \code{kd}, \code{top}, \code{bot}, and \code{lev}, which then apply to the whole time series, or otherwise supply
a time series of values corresponding to \code{I0}. See example for how to use \code{areafun} and \code{lev} and other things.
}
\examples{
\dontrun{
## example (analytical) mean without bathymetry

# solar radiation downwelling (W/m2)
incomingsolar <- c(300,240,340,295,400)

# convert to PAR just below surface (umol/m2/s)
PAR.surf <- seefo::solar2PAR(incomingsolar)

# mixed layer depth (m)
zmix <- c(8,7,6,5.5,4)

# light attenuation coefficient (1/m)
extinction <- c(0.55, 0.6, 0.48, 0.45, 0.4)

data.frame(incomingsolar, PAR.surf, zmix, extinction)

# calculate mean light
meanlight(I0 = PAR.surf, kd = extinction, bot = zmix)

# calculate mean light using only single values for kd, bot
meanlight(I0 = PAR.surf, kd = 0.5, bot = 12.5)


## example (numerical) mean with bathymetry
## bathymetry

depth <- seq(80,0,-5)

elevation <- seq(340, 420, 5)

area <- c(0, 32000, 78000, 132000, 186000, 313000,
          429000, 617000, 825000, 1034000, 1283000,
          1543000, 1809000, 2125000, 2453000,
          2915000, 3481000)

data.frame(depth, elevation, area)

# create function to return area
area_interp <- approxfun(x = elevation, y = area)

# water levels (m) on same reference as bathymetry
level <- c(418, 416, 413, 409, 412)

data.frame(incomingsolar, PAR.surf, zmix, extinction, level)

# calculate mean light with bathymetry
meanlight(I0 = PAR.surf, kd = extinction, bot = zmix,
          areafun = area_interp, lev = level)

# with contant water level
meanlight(I0 = PAR.surf, kd = extinction, bot = zmix,
          areafun = area_interp, lev = 420)

# with contant everything except `I0`
meanlight(I0 = PAR.surf, kd = 0.5, bot = 12.5,
          areafun = area_interp, lev = 420)

# mean light in a deeper layer like the thermocline from 11 to 15 m
meanlight(I0 = PAR.surf, kd = extinction, top = 11, bot = 15,
          areafun = area_interp, lev = 420)

# works with moving thermocline
meanlight(I0 = PAR.surf, kd = extinction,
          top = c(11,11,12,14,13), bot = c(15,16,13,16,15),
          areafun = area_interp, lev = 420)
}

}
\seealso{
\code{\link{solar2PAR}}, \code{\link{extinction_coeff}}
}
\author{
Tom Shatwell
}
